{"ast":null,"code":"var _jsxFileName = \"/Users/anoukshasreemurthy/Downloads/assignment9/src/app/pages/jobs/jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '../../components/card/card';\nimport AI_JOB from '../../../assets/AI_JOB.png';\nimport fullstack from '../../../assets/fullstack.jpg';\nimport dataengg from '../../../assets/dataengg.jpg';\nimport devops from '../../../assets/devops.png';\nimport frontend from '../../../assets/frontend.png';\nimport './jobs.css';\nimport Container from 'react-bootstrap/Container';\nimport Layout from '../../layout/layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jobs(props) {\n  _s();\n  const [jobList] = useState([{\n    title: 'Artificial Intellingence',\n    description: 'REQUIRED: Should be experienced in python and Machine learning',\n    image: AI_JOB,\n    isButton: true,\n    btnName: 'Apply',\n    isList: false\n  }, {\n    title: 'Full Stack Developer',\n    description: 'REQUIRED: Should be experienced in Java, Javascript, SQL, PHP',\n    image: fullstack,\n    isButton: true,\n    btnName: 'Apply',\n    isList: false\n  }, {\n    title: 'Data-Engineer',\n    description: 'REQUIRED: Should be experienced in cloud, SQL, Migrating Data ',\n    image: dataengg,\n    isButton: true,\n    btnName: 'Apply',\n    isList: false\n  }, {\n    title: 'Devops',\n    description: 'REQUIRED: Should be experienced in github, jenkins and builds',\n    image: devops,\n    isButton: true,\n    btnName: 'Apply',\n    isList: false\n  }, {\n    title: 'Frontend Developer',\n    description: 'REQUIRED: Should be experienced in Javascript, React, CSS, HTML',\n    image: frontend,\n    isButton: true,\n    btnName: 'Apply',\n    isList: false\n  }]);\n  let cards = jobList.map((e, i) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: e.title,\n        description: e.description,\n        image: e.image,\n        isSmallCard: true,\n        isList: e.isList,\n        btnName: e.btnName,\n        isButton: e.isButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }, this)\n    }, \"index\" + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    userName: props.userName,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jobs\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Jobs, \"wtfNhvBVHGVjukQ/4jlG3LzToKE=\");\n_c = Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","Card","AI_JOB","fullstack","dataengg","devops","frontend","Container","Layout","Jobs","props","jobList","title","description","image","isButton","btnName","isList","cards","map","e","i","userName"],"sources":["/Users/anoukshasreemurthy/Downloads/assignment9/src/app/pages/jobs/jobs.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport Card from '../../components/card/card'\r\nimport  AI_JOB from '../../../assets/AI_JOB.png'\r\nimport  fullstack from '../../../assets/fullstack.jpg'\r\nimport  dataengg from '../../../assets/dataengg.jpg'\r\nimport  devops from '../../../assets/devops.png'\r\nimport  frontend from '../../../assets/frontend.png'\r\n\r\n\r\n\r\nimport './jobs.css'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Layout from '../../layout/layout'\r\n\r\n\r\nexport default function Jobs(props) {\r\n  const [jobList] = useState([\r\n    {\r\n      title:'Artificial Intellingence',\r\n      description:'REQUIRED: Should be experienced in python and Machine learning',\r\n      image:AI_JOB,\r\n      isButton:true,\r\n      btnName:'Apply',\r\n      isList:false\r\n    },\r\n    {\r\n      title:'Full Stack Developer',\r\n      description:'REQUIRED: Should be experienced in Java, Javascript, SQL, PHP',\r\n      image:fullstack,\r\n      isButton:true,\r\n      btnName:'Apply',\r\n      isList:false\r\n\r\n    },\r\n    {\r\n      title:'Data-Engineer',\r\n      description:'REQUIRED: Should be experienced in cloud, SQL, Migrating Data ',\r\n      image:dataengg,\r\n      isButton:true,\r\n      btnName:'Apply',\r\n      isList:false\r\n\r\n    },\r\n    {\r\n      title:'Devops',\r\n      description:'REQUIRED: Should be experienced in github, jenkins and builds',\r\n      image:devops,\r\n      isButton:true,\r\n      btnName:'Apply',\r\n      isList:false\r\n\r\n    },\r\n    {\r\n      title:'Frontend Developer',\r\n      description:'REQUIRED: Should be experienced in Javascript, React, CSS, HTML',\r\n      image:frontend,\r\n      isButton:true,\r\n      btnName:'Apply',\r\n      isList:false\r\n\r\n    },\r\n   \r\n    \r\n\r\n]);\r\nlet cards=jobList.map((e,i)=>{\r\n return ( <li key={\"index\"+i}>\r\n   <Card title={e.title} description={e.description} image={e.image} isSmallCard={true} isList={e.isList} btnName={e.btnName}\r\n    isButton={e.isButton} ></Card>     \r\n  </li>)\r\n});\r\n  return (\r\n    <Layout userName={props.userName}>\r\n      <Container>\r\n        <div className='jobs'>\r\n          <ul>\r\n                {cards}\r\n          </ul>\r\n        </div>\r\n    </Container>\r\n    </Layout>\r\n\r\n   )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAQC,MAAM,MAAM,4BAA4B;AAChD,OAAQC,SAAS,MAAM,+BAA+B;AACtD,OAAQC,QAAQ,MAAM,8BAA8B;AACpD,OAAQC,MAAM,MAAM,4BAA4B;AAChD,OAAQC,QAAQ,MAAM,8BAA8B;AAIpD,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAGxC,eAAe,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAClC,MAAM,CAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CACzB;IACEY,KAAK,EAAC,0BAA0B;IAChCC,WAAW,EAAC,gEAAgE;IAC5EC,KAAK,EAACZ,MAAM;IACZa,QAAQ,EAAC,IAAI;IACbC,OAAO,EAAC,OAAO;IACfC,MAAM,EAAC;EACT,CAAC,EACD;IACEL,KAAK,EAAC,sBAAsB;IAC5BC,WAAW,EAAC,+DAA+D;IAC3EC,KAAK,EAACX,SAAS;IACfY,QAAQ,EAAC,IAAI;IACbC,OAAO,EAAC,OAAO;IACfC,MAAM,EAAC;EAET,CAAC,EACD;IACEL,KAAK,EAAC,eAAe;IACrBC,WAAW,EAAC,gEAAgE;IAC5EC,KAAK,EAACV,QAAQ;IACdW,QAAQ,EAAC,IAAI;IACbC,OAAO,EAAC,OAAO;IACfC,MAAM,EAAC;EAET,CAAC,EACD;IACEL,KAAK,EAAC,QAAQ;IACdC,WAAW,EAAC,+DAA+D;IAC3EC,KAAK,EAACT,MAAM;IACZU,QAAQ,EAAC,IAAI;IACbC,OAAO,EAAC,OAAO;IACfC,MAAM,EAAC;EAET,CAAC,EACD;IACEL,KAAK,EAAC,oBAAoB;IAC1BC,WAAW,EAAC,iEAAiE;IAC7EC,KAAK,EAACR,QAAQ;IACdS,QAAQ,EAAC,IAAI;IACbC,OAAO,EAAC,OAAO;IACfC,MAAM,EAAC;EAET,CAAC,CAIJ,CAAC;EACF,IAAIC,KAAK,GAACP,OAAO,CAACQ,GAAG,CAAC,CAACC,CAAC,EAACC,CAAC,KAAG;IAC5B,oBAAS;MAAA,uBACP,QAAC,IAAI;QAAC,KAAK,EAAED,CAAC,CAACR,KAAM;QAAC,WAAW,EAAEQ,CAAC,CAACP,WAAY;QAAC,KAAK,EAAEO,CAAC,CAACN,KAAM;QAAC,WAAW,EAAE,IAAK;QAAC,MAAM,EAAEM,CAAC,CAACH,MAAO;QAAC,OAAO,EAAEG,CAAC,CAACJ,OAAQ;QACzH,QAAQ,EAAEI,CAAC,CAACL;MAAS;QAAA;QAAA;QAAA;MAAA;IAAS,GAFf,OAAO,GAACM,CAAC;MAAA;MAAA;MAAA;IAAA,QAGrB;EACP,CAAC,CAAC;EACA,oBACE,QAAC,MAAM;IAAC,QAAQ,EAAEX,KAAK,CAACY,QAAS;IAAA,uBAC/B,QAAC,SAAS;MAAA,uBACR;QAAK,SAAS,EAAC,MAAM;QAAA,uBACnB;UAAA,UACOJ;QAAK;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACH;AAGb;AAAC,GApEuBT,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}